AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  FunTest:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-FunTest
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: FunTest
      CodeUri: src/Function
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - S3CrudPolicy:
            BucketName: !Ref Bucket
      Events:
        MyApiGET:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref MyApi
        Bucket:
          Type: S3
          Properties:
            Bucket: !Ref Bucket
            Events:
              - s3:ObjectCreated:*
              - s3:ObjectRemoved:*
      Environment:
        Variables:
          VALIDATION_DOMAIN: !Ref EnvConfigvalidationDomainAsString
          SECRETS_NAMESPACE: !Sub /${EnvironmentTagName}/
          BUCKET_NAME: !Ref Bucket
          BUCKET_ARN: !GetAtt Bucket.Arn
      Layers:
        - !Ref Layer
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: MyApi
      StageName: !Ref EnvironmentAPIGatewayStageName
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunTest.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
  Layer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Layer ${ResourceName}
        - ResourceName: Layer
      ContentUri: src/Layer
      CompatibleRuntimes:
        - nodejs12.x
      RetentionPolicy: Retain
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucket-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)
  EnvConfigvalidationDomainAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/validationDomain
Metadata:
  EnvConfigParameters:
    EnvConfigvalidationDomainAsString: validationDomain